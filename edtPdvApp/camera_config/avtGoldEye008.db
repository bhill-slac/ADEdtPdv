#
# EPICS database for
# Allied Vision Technoligies GoldEye-008CL
#
# Protocol root must match db filename root
# i.e. avtGoldEye008.proto

record( seq, "$(P)$(R)EdtReConfigSeq" )
{
	field ( DLY1, 0.5 ) field( DOL1, "1" )	field( LNK1, "$(P)$(R)GoldEyeBlackLevel_RBV.PROC"  )
	field ( DLY2, 0.5 ) field( DOL2, "1" )	field( LNK2, "$(P)$(R)GoldEyeBuildState_RBV.PROC" )
	field ( DLY3, 0.5 ) field( DOL3, "1" )	field( LNK3, "$(P)$(R)GoldEyeBuiltInTest_RBV.PROC" )
	field ( DLY4, 0.5 ) field( DOL4, "1" )	field( LNK4, "$(P)$(R)GoldEyeCCE_RBV.PROC" )
	field ( DLY5, 0.5 ) field( DOL5, "1" )	field( LNK5, "$(P)$(R)GoldEyeCCFS_RBV.PROC" )
	field ( DLY6, 0.5 ) field( DOL6, "1" )	field( LNK6, "$(P)$(R)GoldEyeDefPixelCorr_RBV.PROC" )
	field ( DLY7, 0.5 ) field( DOL7, "1" )	field( LNK7, "$(P)$(R)GoldEyeDefPixelTest_RBV.PROC" )
	field ( DLY8, 0.5 ) field( DOL8, "1" )	field( LNK8, "$(P)$(R)GoldEyeLastError_RBV.PROC" )
	field ( DLY9, 0.5 ) field( DOL9, "1" )	field( LNK9, "$(P)$(R)GoldEyeElapsedTime_RBV.PROC" )
	field ( DLYA, 0.5 ) field( DOLA, "1" )	field( LNKA, "$(P)$(R)GoldEyeFSE.PROC" )
	field( FLNK, "$(P)$(R)EdtReConfigSeq2" )
    field( TPRO, 1 )
}
record( seq, "$(P)$(R)EdtReConfigSeq2" )
{
	field ( DLY1, 0.5 ) field( DOL1, "1" )	field( LNK1, "$(P)$(R)GoldEyeFSP.PROC" )
	field ( DLY2, 0.5 ) field( DOL2, "1" )	field( LNK2, "$(P)$(R)GoldEyeFSM.PROC" )
	field ( DLY3, 0.5 ) field( DOL3, "1" )	field( LNK3, "$(P)$(R)GoldEyeFST.PROC" )
	field ( DLY4, 0.5 ) field( DOL4, "1" )	field( LNK4, "$(P)$(R)GoldEyeInfo_RBV.PROC" )
	field ( DLY5, 0.5 ) field( DOL5, "1" )	field( LNK5, "$(P)$(R)GoldEyeOLUTE.PROC" )
	field ( DLY6, 0.5 ) field( DOL6, "1" )	field( LNK6, "$(P)$(R)GoldEyeBitsPerPixel_RBV.PROC" )
	field ( DLY7, 0.5 ) field( DOL7, "1" )	field( LNK7, "$(P)$(R)GoldEyeInfoOverlay_RBV.PROC" )
	field ( DLY8, 0.5 ) field( DOL8, "1" )	field( LNK8, "$(P)$(R)GoldEyeSerialNumber_RBV.PROC" )
	field( FLNK, "$(P)$(R)EdtReConfigSeq3" )
}
record( seq, "$(P)$(R)EdtReConfigSeq3" )
{
	field ( DLY1, 0.5 ) field( DOL1, "1" )	field( LNK1, "$(P)$(R)GoldEyeTestPattern_RBV.PROC" )
	field ( DLY2, 0.5 ) field( DOL2, "1" )	field( LNK2, "$(P)$(R)GoldEyeFirmwareTimestamp_RBV.PROC" )
	field ( DLY3, 0.5 ) field( DOL3, "1" )	field( LNK3, "$(P)$(R)GoldEyeBinY_RBV.PROC" )
	field ( DLY4, 0.5 ) field( DOL4, "1" )	field( LNK4, "$(P)$(R)GoldEyeVR.PROC" )
	field ( DLY5, 0.5 ) field( DOL5, "1" )	field( LNK5, "$(P)$(R)GoldEyeOutputMirror_RBV.PROC" )
	field ( DLY6, 0.5 ) field( DOL6, "1" )	field( LNK6, "$(P)$(R)GoldEyeModelID_RBV.PROC" )
	field ( DLY7, 0.5 ) field( DOL7, "1" )	field( LNK7, "$(P)$(R)GoldEyeTriggerMode_RBV.PROC" )
	field ( DLY8, 0.5 ) field( DOL8, "1" )	field( LNK8, "$(P)$(R)GoldEyeAcquireTime.PROC" )
	field ( DLY9, 0.5 ) field( DOL9, "1" )	field( LNK9, "$(P)$(R)GoldEyeAcquireTime_RBV.PROC" )
}

record( stringin, "$(P)$(R)CamModel" )
{
	field( VAL,  "avtGoldEye008" )
	field( PINI, "YES" )
}

record( stringin, "$(P)$(R)CamModelScreen" )
{
	field( VAL,  "edtPdvScreens/avtGoldEye008.edl" )
	field( PINI, "YES" )
}

# Provide defaults for ADCore SizeX and SizeY
record( longout, "$(P)$(R)SizeX" )
{
	field( VAL, "1024" )
}
record( longout, "$(P)$(R)SizeY" )
{
	field( VAL, "1024" )
}

# Set black level
record( longout, "$(P)$(R)GoldEyeBlackLevel" )
{
    field( DESC, "Set The Black Level" )
    field( DTYP, "stream" )
    field( OUT,	 "@avtGoldEye008.proto SetInt(BL) $(PORT).SER" )
    field( HOPR, 4096 )
    field( DRVH, 4096 )
    field( LOPR, 0    )
    field( DRVL, 0    )
	info( autosaveFields, "DESC VAL" )
    field( FLNK, "$(P)$(R)GoldEyeBlackLevel_RBV" )
    field( SDIS, "$(SerialDisable)")
}

# Read black level
record( longin, "$(P)$(R)GoldEyeBlackLevel_RBV" )
{
    field( DESC, "Black Level" )
    field( DTYP, "stream" )
    field( INP,	 "@avtGoldEye008.proto GetInt(BL) $(PORT).SER" )
    field( SDIS, "$(SerialDisable)")
#	field( PINI, "YES" )
}

record( stringin, "$(P)$(R)GoldEyeBuiltInTest_RBV" )
{
    field( DESC, "Internal Status" )
    field( DTYP, "stream" )
    field( INP,	 "@avtGoldEye008.proto GetStr(BIT) $(PORT).SER" )
    field( SDIS, "$(SerialDisable)")
}

# Read camera and firmware version numbers
# Format x.xx;y.yy;z.zz
# Where:
#	x.xx	is the camera version
#	y.yy	is the microcontroller firmware version
#	z.zz	is the FPGA firmware version
record( stringin, "$(P)$(R)GoldEyeBuildState_RBV" )
{
    field( DESC, "Build State" )
    field( DTYP, "stream" )
    field( INP,	 "@avtGoldEye008.proto GetQStr(BS) $(PORT).SER" )
    field( SDIS, "$(SerialDisable)")
}

# Set Camera Control Exposure source
#	We use source 4, the I/O connector for external trigger in Pulse mode.
#	CCE source isn't used in FreeRun mode.
record( mbbo, "$(P)$(R)GoldEyeCCE" )
{
    field( DESC, "Set Exposure Source & Event" )
    field( DTYP, "stream" )
	field( DOL,  "4" )
    field( OUT,	 "@avtGoldEye008.proto SetInt(CCE) $(PORT).SER" )
#   field( ZRVL, 0 )
#   field( ONVL, 1 )
#   field( TWVL, 2 )
#   field( THVL, 3 )
    field( FRVL, 4 )
#   field( ZRST, "CC1"	)
#   field( ONST, "CC2"	)
#   field( TWST, "CC3"	)
#   field( THST, "CC4"	)
    field( FRST, "I/O"	)
    field( FLNK, "$(P)$(R)GoldEyeCCE_RBV" )
# Disabled to avoid accidental use
	field( DISV, "0" )
	info( autosaveFields, "DESC" )
    field( SDIS, "$(SerialDisable)")
}

# Read Camera Control Exposure source
#	We use source 4, the I/O connector for external trigger in Pulse mode.
#	CCE source isn't used in FreeRun mode.
record( mbbi, "$(P)$(R)GoldEyeCCE_RBV" )
{
    field( DESC, "Exposure Source and Event" )
    field( DTYP, "stream" )
    field( INP,	 "@avtGoldEye008.proto GetInt(CCE) $(PORT).SER" )
    field( ZRVL, 0 )
    field( ONVL, 1 )
    field( TWVL, 2 )
    field( THVL, 3 )
    field( FRVL, 4 )
    field( ZRST, "CC1"	)
    field( ONST, "CC2"	)
    field( TWST, "CC3"	)
    field( THST, "CC4"	)
    field( FRST, "I/O"	)
	field( PINI, "YES"  )
    field( SDIS, "$(SerialDisable)")
}

# Used to specific camera control frame setting
# Only used for delayed transfer modes that we don't use
record( mbbo, "$(P)$(R)GoldEyeCCFS" )
{
    field( DESC, "Set Trigger Source & Event" )
    field( DTYP, "stream" )
    field( OUT,	 "@avtGoldEye008.proto SetInt(CCFS) $(PORT).SER" )
    field( ZRVL, 0 )
    field( ONVL, 1 )
    field( TWVL, 2 )
    field( THVL, 3 )
    field( FRVL, 4 )
    field( FVVL, 5 )
    field( ZRST, "CC1"	)
    field( ONST, "CC2"	)
    field( TWST, "CC3"	)
    field( THST, "CC4"	)
    field( FRST, "I/O"	)
    field( FVST, "Soft"	)
    field( FLNK, "$(P)$(R)GoldEyeCCFS_RBV" )
# Disabled to avoid accidental use
	field( DISV, "0" )
	info( autosaveFields, "DESC VAL" )
    field( SDIS, "$(SerialDisable)")
}

record( mbbi, "$(P)$(R)GoldEyeCCFS_RBV" )
{
    field( DESC, "Trigger Source and Event" )
    field( DTYP, "stream" )
    field( INP,	 "@avtGoldEye008.proto GetInt(CCFS) $(PORT).SER" )
    field( ZRVL, 0 )
    field( ONVL, 1 )
    field( TWVL, 2 )
    field( THVL, 3 )
    field( FRVL, 4 )
    field( FVVL, 5 )
    field( ZRST, "CC1"	)
    field( ONST, "CC2"	)
    field( TWST, "CC3"	)
    field( THST, "CC4"	)
    field( FRST, "I/O"	)
    field( FVST, "Soft"	)
	field( PINI, "YES"  )
    field( SDIS, "$(SerialDisable)")
}

record( bo, "$(P)$(R)GoldEyeDefPixelCorr" )
{
    field( DESC, "Def Pixel Corr. On/Off" )
    field( DTYP, "stream" )
    field( OUT,	 "@avtGoldEye008.proto SetInt(DPE) $(PORT).SER" )
    field( ZNAM, "Disable" )
    field( ONAM, "Enable"  )
    field( FLNK, "$(P)$(R)GoldEyeDefPixelCorr_RBV" )
	field( PINI, "YES" )
	info( autosaveFields, "DESC VAL" )
    field( SDIS, "$(SerialDisable)")
}

record( bi, "$(P)$(R)GoldEyeDefPixelCorr_RBV" )
{
    field( DESC, "Defect Pixel Correction" )
    field( DTYP, "stream" )
    field( INP,	 "@avtGoldEye008.proto GetInt(DPE) $(PORT).SER" )
    field( ZNAM, "Disabled" )
    field( ONAM, "Enabled"  )
	field( PINI, "YES" )
    field( SDIS, "$(SerialDisable)")
}

record( mbbo, "$(P)$(R)GoldEyeDefPixelTest" )
{
    field( DESC, "Defective Px TestMode" )
    field( DTYP, "stream" )
    field( OUT,	 "@avtGoldEye008.proto SetInt(DPT) $(PORT).SER" )
    field( ZRVL, 0 )
    field( ONVL, 1 )
    field( TWVL, 2 )
    field( THVL, 3 )
    field( ZRST, "Disable"  )
    field( ONST, "DP White" )
    field( TWST, "DP Black" )
    field( THST, "DP W/B" )
    field( FLNK, "$(P)$(R)GoldEyeDefPixelTest_RBV" )
	field( PINI, "YES" )
	info( autosaveFields, "DESC VAL" )
    field( SDIS, "$(SerialDisable)")
}

record( mbbi, "$(P)$(R)GoldEyeDefPixelTest_RBV" )
{
    field( DESC, "Defective Px TestMode" )
    field( DTYP, "stream" )
    field( INP,	 "@avtGoldEye008.proto GetInt(DPT) $(PORT).SER" )
    field( ZRVL, 0 )
    field( ONVL, 1 )
    field( TWVL, 2 )
    field( THVL, 3 )
    field( ZRST, "Disabled" )
    field( ONST, "DP White" )
    field( TWST, "DP Black" )
    field( THST, "DP W/B"   )
	field( PINI, "YES" )
    field( SDIS, "$(SerialDisable)")
}

record( mbbi, "$(P)$(R)GoldEyeLastError_RBV" )
{
    field( DESC, "Latest Error Number" )
    field( DTYP, "stream" )
    field( INP,	 "@avtGoldEye008.proto GetInt(ERR) $(PORT).SER" )
    field( ZRVL, 0   ) field( ZRST, "No Error" )
    field( ONVL, 1   ) field( ONST, "Unknown Command" )
    field( TWVL, 2   ) field( TWST, "Missing Param" )
    field( THVL, 3   ) field( THST, "Syntax Error"   )
    field( FRVL, 4   ) field( FRST, "Too many param"   )
    field( FVVL, 5   ) field( FVST, "Missing param"   )
    field( SXVL, 100 ) field( SXST, "NVRAM Load Error"   )
    field( SVVL, 7   ) field( SVST, "Param out of range"   )
    field( EIVL, 8   ) field( EIST, "Internal Error"   )
    field( NIVL, 101 ) field( NIST, "NVRAM Save Error"   )
    field( TEVL, 102 ) field( TEST, "Def. Pixel List Full"   )
    field( ELVL, 103 ) field( ELST, "Def. Pixel List Dup"   )
    field( TVVL, 120 ) field( TVST, "OLUT Open Error"   )
    field( TTVL, 121 ) field( TTST, "OLUT Not Open"   )
    field( FTVL, 122 ) field( FTST, "Not enough LUT entries"   )
    field( FFVL, 123 ) field( FFST, "Too many LUT entries"   )
	field( PINI, "YES" )
    field( SDIS, "$(SerialDisable)")
}

# Returns x;y, where total time is y+(x*65536) hours
record( stringin, "$(P)$(R)GoldEyeElapsedTime_RBV" )
{
    field( DESC, "Elapsed Time" )
    field( DTYP, "stream" )
	field( SCAN, "10 second" )
    field( INP,	 "@avtGoldEye008.proto GetStr(ET) $(PORT).SER" )
    field( SDIS, "$(SerialDisable)")
}

# TODO: Enable/Disable based on TriggerMode, and add calc records to convert from ADCore AcquirePeriod
record( ao, "$(P)$(R)AcquirePeriod"			)
{
	field( DISA, "0" )
    field( FLNK, "$(P)$(R)GoldEyeCalcAcquirePeriod" )
}

record( calcout, "$(P)$(R)GoldEyeCalcAcquirePeriod" )
{
	field( INPA, "$(P)$(R)AcquirePeriod"			)
	field( INPB, "10e-6" )
	field( CALC, "MAX(0,MIN(A/B,32000))" )
	field( OUT,  "$(P)$(R)GoldEyeAcquirePeriod PP MS"	)
    field( HOPR, 32000    )
    field( LOPR, 0        )
    field( EGU,  "e-5sec" )
}

# Set the acquire period, the rep rate for image capture
# Only works in FreeRun trigger mode
# Argument is an integer in units of 10us
record( longout, "$(P)$(R)GoldEyeAcquirePeriod" )
{
    field( DESC, "Set The Frame Period" )
    field( DTYP, "stream" )
    field( OUT,	 "@avtGoldEye008.proto SetInt(FP) $(PORT).SER" )
    field( FLNK, "$(P)$(R)GoldEyeAcquirePeriod_RBV" )
    field( HOPR, 32000    )
    field( DRVH, 32000    )
    field( LOPR, 0        )
    field( DRVL, 0        )
    field( EGU,  "e-5sec"  )
#	field( TPRO, 2 )
	info( autosaveFields, "DESC VAL" )
    field( SDIS, "$(SerialDisable)")
}


# Read AcquirePeriod, the rep rate for image capture
# Only relevant in FreeRun trigger mode
# Reply value is an integer in units of 10us
record( longin, "$(P)$(R)GoldEyeAcquirePeriod_RBV" )
{
    field( DESC, "Frame Period" )
    field( DTYP, "stream" )
    field( INP,	 "@avtGoldEye008.proto GetInt(FP) $(PORT).SER" )
    field( EGU,  "e-5sec"  )
	field( FLNK, "$(P)$(R)GoldEyeCalcAcquirePeriod_RBV"	)
    field( SDIS, "$(SerialDisable)")
}

record( calcout, "$(P)$(R)GoldEyeCalcAcquirePeriod_RBV" )
{
	field( INPA, "$(P)$(R)GoldEyeAcquirePeriod_RBV"	)
	field( INPB, "10e-6" )
	field( CALC, "A*B" )
    field( EGU,  "sec"  )
	field( OUT,  "$(P)$(R)AcquirePeriod_RBV PP MS"	)
}
record( ai, "$(P)$(R)AcquirePeriod_RBV"		)
{
	field( DISA, "0" )
}

#	FSE		Set flash strobe enable
record( bo, "$(P)$(R)GoldEyeSetFSE" )
{
    field( DESC, "Set Flash Strobe Enable" )
    field( DTYP, "stream"  )
    field( OUT,	 "@avtGoldEye008.proto SetInt(FSE) $(PORT).SER" )
    field( FLNK, "$(P)$(R)GoldEyeFSE" )
    field( ZNAM, "Disable" )
    field( ONAM, "Enable"  )
	info( autosaveFields, "DESC VAL" )
    field( SDIS, "$(SerialDisable)")
}

record( bi, "$(P)$(R)GoldEyeFSE" )
{
    field( DESC, "Flash Strobe Enable" )
    field( DTYP, "stream"  )
    field( INP,	 "@avtGoldEye008.proto GetInt(FSE) $(PORT).SER" )
    field( ZNAM, "Disable" )
    field( ONAM, "Enable"  )
    field( SDIS, "$(SerialDisable)")
}

#	FSP		Set flash strobe polarity
record( bo, "$(P)$(R)GoldEyeSetFSP" )
{
    field( DESC, "Set Flash Strobe Polarity" )
    field( DTYP, "stream"   )
    field( OUT,	 "@avtGoldEye008.proto SetInt(FSP) $(PORT).SER" )
    field( FLNK, "$(P)$(R)GoldEyeFSP" )
    field( ZNAM, "Normal"   )
    field( ONAM, "Invert" )
	info( autosaveFields, "DESC VAL" )
    field( SDIS, "$(SerialDisable)")
}

record( bi, "$(P)$(R)GoldEyeFSP" )
{
    field( DESC, "Flash Strobe Polarity" )
    field( DTYP, "stream"   )
    field( INP,	 "@avtGoldEye008.proto GetInt(FSP) $(PORT).SER" )
    field( ZNAM, "Normal"   )
    field( ONAM, "Invert" )
    field( SDIS, "$(SerialDisable)")
}

#	FSM		Set flash strobe mode
record( bo, "$(P)$(R)GoldEyeSetFSM" )
{
    field( DESC, "Set Flash Strobe Mode" )
    field( DTYP, "stream" )
    field( OUT,	 "@avtGoldEye008.proto SetInt(FSM) $(PORT).SER" )
    field( FLNK, "$(P)$(R)GoldEyeFSM" )
    field( ZNAM, "Automatic"  )
    field( ONAM, "Programmed" )
	info( autosaveFields, "DESC VAL" )
    field( SDIS, "$(SerialDisable)")
}

record( bi, "$(P)$(R)GoldEyeFSM" )
{
    field( DESC, "Flash Strobe Mode" )
    field( DTYP, "stream" )
    field( INP,	 "@avtGoldEye008.proto GetInt(FSM) $(PORT).SER" )
    field( ZNAM, "Automatic"  )
    field( ONAM, "Programmed" )
    field( SDIS, "$(SerialDisable)")
}

#	FSM		Set flash strobe timing mode
record( longout, "$(P)$(R)GoldEyeSetFST" )
{
    field( DESC, "Set Flash Strobe Timing" )
    field( DTYP, "stream" )
    field( OUT,	 "@avtGoldEye008.proto SetInt(FST) $(PORT).SER" )
    field( FLNK, "$(P)$(R)GoldEyeFST" )
	info( autosaveFields, "DESC VAL" )
    field( SDIS, "$(SerialDisable)")
}

record( longin, "$(P)$(R)GoldEyeFST" )
{
    field( DESC, "Flash Strobe Timing" )
    field( DTYP, "stream" )
    field( INP,	 "@avtGoldEye008.proto GetInt(FST) $(PORT).SER" )
    field( SDIS, "$(SerialDisable)")
}

# Disabled as not supported by GoldEye1000
record( bo, "$(P)$(R)GoldEyeAutoExposure" )
{
	field( DISA, "1" )
    field( DESC, "Auto Integration Time" )
    #field( DTYP, "stream" )
    #field( OUT,	 "@avtGoldEye008.proto SetInt(AIC) $(PORT).SER" )
    field( ZNAM, "Disable" )
    field( ONAM, "Enable"  )
    field( FLNK, "$(P)$(R)GoldEyeAutoExposure_RBV" )
	field( PINI, "YES" )
	info( autosaveFields, "DESC VAL" )
}

# Disabled as not supported by GoldEye1000
record( bi, "$(P)$(R)GoldEyeAutoExposure_RBV" )
{
	field( DISA, "1" )
    field( DESC, "Auto Integration Time" )
    #field( DTYP, "stream" )
    #field( INP,	 "@avtGoldEye008.proto GetInt(AIC) $(PORT).SER" )
    field( ZNAM, "Disabled" )
    field( ONAM, "Enabled"  )
	field( PINI, "YES" )
}

# Disabled as not supported by GoldEye1000
record( bo, "$(P)$(R)GoldEyeAutoGain" )
{
	field( DISA, "1" )
    field( DESC, "Auto Gain Control" )
    #field( DTYP, "stream" )
    #field( OUT,	 "@avtGoldEye008.proto SetInt(AGC) $(PORT).SER" )
    field( ZNAM, "Disable" )
    field( ONAM, "Enable"  )
    field( FLNK, "$(P)$(R)GoldEyeAutoGain_RBV" )
	field( PINI, "YES" )
	info( autosaveFields, "DESC VAL" )
}

# Disabled as not supported by GoldEye1000
record( bi, "$(P)$(R)GoldEyeAutoGain_RBV" )
{
	field( DISA, "1" )
    field( DESC, "Auto Gain Control" )
    #field( DTYP, "stream" )
    #field( INP,	 "@avtGoldEye008.proto GetInt(AGC) $(PORT).SER" )
    field( ZNAM, "Disabled" )
    field( ONAM, "Enabled"  )
	field( PINI, "YES" )
}

record( ao, "$(P)$(R)EdtGain" )
{
#	field( TPRO, 2 )
	field( PREC, "2" )
	field( FLNK, "$(P)$(R)GoldEyeCalcGain" )
}
record( calcout, "$(P)$(R)GoldEyeCalcGain" )
{
#	field( TPRO, 2 )
	field( INPA, "$(P)$(R)EdtGain NPP NMS" )
	field( CALC, "MAX(100,MIN(A*100,3200))" )
	field( OUT,  "$(P)$(R)GoldEyeGain PP MS" )
	field( PREC, "2" )
}

# GoldEye gain is in integer units of 0.01 amplification
# 100  is the minimum gain, i.e. no  signal amplification
# 3200 is the maximum gain, i.e. 32x signal amplification
record( longout, "$(P)$(R)GoldEyeGain" )
{
    field( DESC, "Set The Digital Gain" )
    field( DTYP, "stream" )
    field( OUT,	 "@avtGoldEye008.proto SetInt(GA) $(PORT).SER" )
    field( HOPR, 3200 )
    field( DRVH, 3200 )
    field( LOPR, 100  )
    field( DRVL, 100  )
    field( FLNK, "$(P)$(R)GoldEyeGain_RBV" )
	info( autosaveFields, "DESC VAL" )
	info( archiveFields,  "DESC VAL" )
    field( SDIS,   "$(SerialDisable)" ) 
}

# TODO: Need to convert the GoldEye 1000 gain from
# integer units of 0.01 amplification
# to ADCore floating point $(PORT).SERGain_RBV
# 100 is the minimum gain, i.e. no signal amplification
record( longin, "$(P)$(R)GoldEyeGain_RBV" )
{
    field( DESC, "Digital Gain" )
    field( DTYP, "stream" )
    field( INP,	 "@avtGoldEye008.proto GetInt(GA) $(PORT).SER" )
	field( PINI, "YES" )
    field( FLNK, "$(P)$(R)GoldEyeCalcGain_RBV" )
	info( autosaveFields, "DESC VAL" )
	info( archiveFields,  "DESC VAL" )
    field( SDIS, "$(SerialDisable)")
}

record( calcout, "$(P)$(R)GoldEyeCalcGain_RBV" )
{
#	field( TPRO, 2 )
	field( INPA, "$(P)$(R)GoldEyeGain_RBV NPP NMS" )
	field( CALC, "A==0?1.0:(A/100)" )
	field( OUT,  "$(P)$(R)EdtGain_RBV PP MS" )
	field( PREC, "2" )
}
record( ao, "$(P)$(R)EdtGain_RBV" )
{
#	field( TPRO, 2 )
	field( PREC, "2" )
}

# Read camera identification string
# Format is a-bc/x[f] S/N:e
# Where:
#	a is the family name
#	b is the detector type
#	c is c for color, b for B/W
#	x is D or Q for Dual or Quad sensor output
#	[f] is optional for special customer version info
#	e is the serial number
record( stringin, "$(P)$(R)GoldEyeInfo_RBV" )
{
    field( DESC, "ID String" )
    field( DTYP, "stream" )
    field( INP,	 "@avtGoldEye008.proto GetQStr(ID) $(PORT).SER" )
    field( SDIS, "$(SerialDisable)")
}

# Note: Minimum pulse width to trigger GoldEye is 6us
# Range for exposure time is 6us to 200ms
record( ao, "$(P)$(R)EdtAcquireTime" )
{
#	field( TPRO, 2 )
	field( PREC, "5" )
	field( FLNK, "$(P)$(R)GoldEyeAcquireTimeFanout" )
}
record( calc, "$(P)$(R)GoldEyeAcquireTimeSelect" )
{
#	field( TPRO, 2 )
	field( INPA, "$(P)$(R)TriggerMode CPP NMS" )
	field( CALC, "A+1" )
	field( PINI, "YES" )
	field( FLNK, "$(P)$(R)GoldEyeAcquireTimeFanout" )
}
record( fanout, "$(P)$(R)GoldEyeAcquireTimeFanout" )
{
#	field( TPRO, 2 )
	field( DESC, "Selects AcquireTime cmd" )
	field( SELL, "$(P)$(R)GoldEyeAcquireTimeSelect PP" )
	field( SELM, "Specified" )
	field( LNK1, "$(P)$(R)GoldEyeCalcAcquireTime" )
	field( LNK2, "$(P)$(R)GoldEyeCalcAcquireTime" )
	field( LNK3, "$(P)$(R)GoldEyePulseAcquireTime" )
	field( FLNK, "$(P)$(R)GoldEyeGetAcquireTimeFanout" )
}

# Calc record for GoldEye AcquireTime, the length of the exposure
# as controlled by the camera electronics.
# GoldEyeCalcAcquireTime is an integer in units of 10us
record( calcout, "$(P)$(R)GoldEyeCalcAcquireTime" )
{
#	field( TPRO, 2 )
    field( DESC, "Calc Integration Time" )
	field( INPA, "$(P)$(R)AcquireTime NPP NMS" )
	field( INPB, "10e-6" )
	field( CALC, "MAX(1,MIN(A/B,32000))" )
    field( HOPR, 32000    )
    field( LOPR, 1        )
	field( OUT,  "$(P)$(R)GoldEyeAcquireTime PP MS" )
    field( EGU,  "e-5sec"  )
	info( autosaveFields, "DESC" )
}
# GoldEyePulseAcquireTime
# Write the AcquireTime to the trigger pulse width
record( calcout, "$(P)$(R)GoldEyePulseAcquireTime" )
{
	field( INPA, "$(P)$(R)AcquireTime NPP NMS"  )
	field( INPB, "$(PW_SCALE=1e9)"  )
	field( CALC, "A*B" )
	field( OUT,  "$(PWIDTH=)" )
	field( PREC, "0" )
	field( EGU,  "ns" )
	info( autosaveFields, "HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC" )
	info( archiveFields,  "HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC VAL" )
}

# GoldEyePulseAcquireTime_RBV
record( calcout, "$(P)$(R)GoldEyePulseAcquireTime_RBV" )
{
	field( INPA, "$(PW_RBV) NPP NMS" )
	field( INPB, "$(PW_SCALE=1e9)"  )
	field( CALC, "A/B" )
	field( PREC, "5" )
	field( OOPT, "On Change" )
	field( OUT,  "$(P)$(R)EdtAcquireTime_RBV PP MS" )
	field( EGU,  "ns" )
	info( autosaveFields, "HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC" )
	info( archiveFields,  "HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC VAL" )
}

# Set AqcuireTime, the length of the exposure
# Only works in FreeRun and External trigger modes
# Argument is an integer in units of 10us
record( longout, "$(P)$(R)GoldEyeAcquireTime" )
{
#	field( TPRO, 2 )
    field( DESC, "Set Integration Time" )
    field( DTYP, "stream" )
    field( OUT,	 "@avtGoldEye008.proto SetInt(IT) $(PORT).SER" )
    field( HOPR, 32000    )
    field( DRVH, 32000    )
    field( LOPR, 1        )
    field( DRVL, 1        )
    field( EGU,  "e-5sec"  )
    field( FLNK, "$(P)$(R)GoldEyeGetAcquireTimeFanout" )
	info( autosaveFields, "DESC" )
    field( SDIS, "$(SerialDisable)")
}

record( fanout, "$(P)$(R)GoldEyeGetAcquireTimeFanout" )
{
#	field( TPRO, 2 )
	field( DESC, "Selects AcquireTime read cmd" )
	field( SELL, "$(P)$(R)GoldEyeAcquireTimeSelect" )
	field( SELM, "Specified" )
	field( LNK1, "$(P)$(R)GoldEyeAcquireTime_RBV" )
	field( LNK2, "$(P)$(R)GoldEyeAcquireTime_RBV" )
	field( LNK3, "$(P)$(R)GoldEyePulseAcquireTime_RBV" )
	field( PINI, "YES" )
}

# Read AqcuireTime, the length of the exposure
# Only relevant in FreeRun trigger mode
# Reply value is an integer in units of 10us
record( longin, "$(P)$(R)GoldEyeAcquireTime_RBV" )
{
#	field( TPRO, 2 )
    field( DESC, "Integration Time" )
    field( DTYP, "stream" )
    field( INP,	 "@avtGoldEye008.proto GetInt(IT) $(PORT).SER" )
    field( EGU,  "e-5sec"  )
	field( FLNK, "$(P)$(R)GoldEyeCalcAcquireTime_RBV" )
	info( autosaveFields, "DESC HHSV HIGH HIHI HSV LLSV LOLO LOW LSV" )
	info( archiveFields,  "DESC HHSV HIGH HIHI HSV LLSV LOLO LOW LSV VAL" )
    field( SDIS, "$(SerialDisable)")
}
record( calcout, "$(P)$(R)GoldEyeCalcAcquireTime_RBV" )
{
#	field( TPRO, 2 )
    field( DESC, "Calc Integration Time" )
	field( INPA, "$(P)$(R)GoldEyeAcquireTime_RBV NPP NMS" )
	field( INPB, "10e-6" )
	field( CALC, "A*B" )
	field( OUT,	 "$(P)$(R)EdtAcquireTime_RBV PP MS" )
    field( EGU,  "sec"  )
	info( autosaveFields, "DESC" )
}

# Set the trigger mode
#	FreeRun mode is used for continuous acquisition, where the camera acquires images
#		based on the AcquireTime (exposure) and AcquirePeriod (rep rate)
#	Pulse mode is used for exposure timing via external trigger pulse.
#		Pulse width controls exposure, readout begins approx 418us after the end of the trigger pulse
#	The Delayed and double modes are provided for slow framegrabbers and not used by this driver
record( mbbi, "$(P)$(R)EdtTriggerMode" )
{
	field( FLNK, "$(P)$(R)GoldEyeCalcTriggerMode" )
}
record( calc, "$(P)$(R)GoldEyeCalcTriggerMode" )
{
#	field( TPRO, 2 )
	field( INPA, "$(P)$(R)EdtTriggerMode NPP NMS" )
	field( CALC, "A==0?0:(A==1?5:1)" )
	field( FLNK, "$(P)$(R)GoldEyeTriggerMode" )
}
record( mbbo, "$(P)$(R)GoldEyeTriggerMode" )
{
#	field( TPRO, 2 )
    field( DESC, "Set the Acquisition Mode" )
	field( OMSL, "closed_loop" )
	field( DOL,  "$(P)$(R)GoldEyeCalcTriggerMode NPP NMS" )
    field( DTYP, "stream" )
    field( OUT,	 "@avtGoldEye008.proto SetInt(MO) $(PORT).SER" )
    field( ZRVL, 0 ) field( ZRST, "FreeRun"     )
    field( ONVL, 1 ) field( ONST, "Pulse"         )
    field( TWVL, 2 ) field( TWST, "Delayed"        )
    field( THVL, 3 ) field( THST, "Double"         )
    field( FRVL, 4 ) field( FRST, "Double Delayed" )
    field( FVVL, 5 ) field( FVST, "External"   )
	field( FLNK, "$(P)$(R)GoldEyeTriggerMode_RBV" )
    field( SDIS, "$(SerialDisable)")
}

# Read the trigger mode
record( mbbi, "$(P)$(R)GoldEyeTriggerMode_RBV" )
{
#	field( TPRO, 2 )
    field( DESC, "Acquisition Mode" )
    field( DTYP, "stream" )
    field( INP,	 "@avtGoldEye008.proto GetInt(MO) $(PORT).SER" )
    field( ZRVL, 0 ) field( ZRST, "FreeRun"     )
    field( ONVL, 1 ) field( ONST, "Pulse"         )
    field( TWVL, 2 ) field( TWST, "Delayed"        )
    field( THVL, 3 ) field( THST, "Double"         )
    field( FRVL, 4 ) field( FRST, "Double Delayed" )
    field( FVVL, 5 ) field( FVST, "External"   )
	field( PINI, "YES" )
	field( FLNK, "$(P)$(R)GoldEyeCalcEdtTriggerMode" )
    field( SDIS, "$(SerialDisable)")
}
record( calc, "$(P)$(R)GoldEyeCalcEdtTriggerMode" )
{
#	field( TPRO, 2 )
	field( INPA, "$(P)$(R)GoldEyeTriggerMode_RBV NPP NMS" )
	field( CALC, "A==0?0:(A==5?1:2)" )
	field( FLNK, "$(P)$(R)EdtTriggerMode_RBV" )
}

# Make EdtTriggerMode_RBV get it's value from GoldEyeCalcEdtTriggerMode
record( mbbo, "$(P)$(R)EdtTriggerMode_RBV" )
{
#	field( TPRO, 2 )
	field( OMSL, "closed_loop" )
	field( DOL,  "$(P)$(R)GoldEyeCalcEdtTriggerMode NPP MS" )
}

record( bo, "$(P)$(R)GoldEyeSetOLUTE" )
{
    field( DESC, "Set Output Lookup Table" )
    field( DTYP, "stream"  )
    field( OUT,	 "@avtGoldEye008.proto SetInt(OLUTE) $(PORT).SER" )
    field( FLNK, "$(P)$(R)GoldEyeOLUTE" )
    field( ZNAM, "Disable" )
    field( ONAM, "Enable"  )
# Disabled to avoid accidental use
	field( DISV, "0" )
#	info( autosaveFields, "DESC VAL" )
    field( SDIS, "$(SerialDisable)")
}

record( bi, "$(P)$(R)GoldEyeOLUTE" )
{
    field( DESC, "Output Lookup Table Enable" )
    field( DTYP, "stream"  )
    field( INP,	 "@avtGoldEye008.proto GetInt(OLUTE) $(PORT).SER" )
    field( ZNAM, "Disable" )
    field( ONAM, "Enable"  )
    field( SDIS, "$(SerialDisable)")
}

record( longout, "$(P)$(R)GoldEyeBitsPerPixel" )
{
    field( DESC, "Set The Output Resolution" )
    field( DTYP, "stream" )
    field( OUT,	 "@avtGoldEye008.proto SetInt(OR) $(PORT).SER" )
    field( FLNK, "$(P)$(R)GoldEyeBitsPerPixel_RBV" )
    field( HOPR, 12 )
    field( DRVH, 12 )
    field( LOPR,  8 )
    field( DRVL,  8 )
# Disabled to avoid accidental use
	field( DISV, "0" )
    field( SDIS, "$(SerialDisable)")
}

record( longin, "$(P)$(R)GoldEyeBitsPerPixel_RBV" )
{
    field( DESC, "Output Resolution" )
    field( DTYP, "stream" )
    field( INP,	 "@avtGoldEye008.proto GetInt(OR) $(PORT).SER" )
	field( PINI, "YES" )
    field( SDIS, "$(SerialDisable)")
}

# Overlay replaces first 8 pixels w/ frame counter and integration time
record( bo, "$(P)$(R)GoldEyeInfoOverlay" )
{
    field( DESC, "Set Information Overlay" )
    field( DTYP, "stream"  )
    field( OUT,	 "@avtGoldEye008.proto SetInt(OVL) $(PORT).SER" )
    field( FLNK, "$(P)$(R)GoldEyeInfoOverlay_RBV" )
    field( ZNAM, "Disable" )
    field( ONAM, "Enable"  )
# Disabled to avoid accidental use
	field( DISV, "0" )
    field( SDIS, "$(SerialDisable)")
}

record( bi, "$(P)$(R)GoldEyeInfoOverlay_RBV" )
{
    field( DESC, "Information Overlay" )
    field( DTYP, "stream"  )
    field( INP,	 "@avtGoldEye008.proto GetInt(OVL) $(PORT).SER" )
    field( ZNAM, "Disabled" )
    field( ONAM, "Enabled"  )
	field( PINI, "YES" )
    field( SDIS, "$(SerialDisable)")
}

# Save configuration
# Config 1..9 are available for user configurations
record( longout, "$(P)$(R)GoldEyeSaveConf" )
{
    field( DESC, "Save the Configuration" )
    field( DTYP, "stream" )
    field( OUT,	 "@avtGoldEye008.proto SetIntNoInit(SC) $(PORT).SER" )
    field( HOPR, 9 )
    field( DRVH, 9 )
    field( LOPR, 1 )
    field( DRVL, 1 )
# Disabled to avoid accidental use
	field( DISV, "0" )
    field( SDIS, "$(SerialDisable)")
}

record( longin, "$(P)$(R)GoldEyeSerialNumber_RBV" )
{
    field( DESC, "Serial Number" )
    field( DTYP, "stream" )
    field( INP,	 "@avtGoldEye008.proto GetSerial $(PORT).SER" )
	field( PINI, "YES" )
    field( SDIS, "$(SerialDisable)")
}

# Temperature C
record( longin, "$(P)$(R)GoldEyeTemperature_RBV" )
{
    field( DESC, "Temperature of the Sensor" )
    field( DTYP, "stream" )
    field( INP,	 "@avtGoldEye008.proto GetTempC $(PORT).SER" )
	field( EGU,  "C" )
	field( HIHI, "60" )		field( HHSV, "MAJOR" )
	field( HIGH, "50" )		field( HSV,  "MINOR" )
	field( SCAN, "10 second" )
	field( FLNK, "$(P)$(R)GoldEyeTemperatureF_RBV" )
    field( SDIS, "$(SerialDisable)")
}

record( calc, "$(P)$(R)GoldEyeTemperatureF_RBV" )
{
	field( INPA, "$(P)$(R)GoldEyeTemperature_RBV NPP MS" )
	field( CALC, "(9*A/5)+32" )
    field( SDIS, "$(SerialDisable)")
}

record( bo, "$(P)$(R)GoldEyeTestPattern" )
{
    field( DESC, "Test Pattern On/Off" )
    field( DTYP, "stream" )
    field( OUT,	 "@avtGoldEye008.proto SetInt(TP) $(PORT).SER" )
    field( FLNK, "$(P)$(R)GoldEyeTestPattern_RBV" )
    field( ZNAM, "OFF" )
    field( ONAM, "ON"  )
    field( SDIS, "$(SerialDisable)")
}

record( bi, "$(P)$(R)GoldEyeTestPattern_RBV" )
{
    field( DESC, "Test Pattern Status" )
    field( DTYP, "stream" )
    field( INP,	 "@avtGoldEye008.proto GetInt(TP) $(PORT).SER" )
    field( ZNAM, "OFF" )
    field( ONAM, "ON"  )
    field( SDIS, "$(SerialDisable)")
}

record( stringin, "$(P)$(R)GoldEyeFirmwareTimestamp_RBV" )
{
    field( DESC, "Firmware Release Time Stamp" )
    field( DTYP, "stream" )
    field( INP,	 "@avtGoldEye008.proto GetQStr(UFDT) $(PORT).SER" )
    field( SDIS, "$(SerialDisable)")
}

# Horizontal Binning is not installed on most GoldEye1000 cameras
# Set horizontal binning
# TODO: Use calc record to compute output value from EdtBinX
#   EdtBinX == 1, GoldEye HBIN 0
#   EdtBinX == 2, GoldEye HBIN 1
#record( longout, "$(P)$(R)GoldEyeBinX" )
#{
#    field( DESC, "Set The horix binning" )
#    field( DTYP, "stream" )
#    field( OUT,	 "@avtGoldEye008.proto SetInt(HBIN) $(PORT).SER" )
#    field( FLNK, "$(P)$(R)GoldEyeBinX_RBV" )
#    field( HOPR, 1 )
#    field( DRVH, 1 )
#    field( LOPR, 0 )
#    field( DRVL, 0 )
#}

# TODO: Use calc record to compute EdtBinX_RBV from HBIN reply
#   GoldEye HBIN 0, EdtBinX_RBV 1
#   GoldEye HBIN 1, EdtBinX_RBV 2
#record( longin, "$(P)$(R)GoldEyeBinX_RBV" )
#{
#    field( DESC, "Horiz Binning" )
#    field( DTYP, "stream" )
#    field( INP,	 "@avtGoldEye008.proto GetInt(HBIN) $(PORT).SER" )
#}

# Set vertical binning
# TODO: Use calc record to compute output value from EdtBinX
#   EdtBinY == 1, GoldEye VBIN 0
#   EdtBinY == 2, GoldEye VBIN 1
#   EdtBinY == 4, GoldEye VBIN 2
#   EdtBinY == 8, GoldEye VBIN 3
record( longout, "$(P)$(R)GoldEyeBinY" )
{
    field( DESC, "Set The Vertical Binning" )
    field( DTYP, "stream" )
    field( OUT,	 "@avtGoldEye008.proto SetInt(VBIN) $(PORT).SER" )
    field( FLNK, "$(P)$(R)GoldEyeBinY_RBV" )
    field( HOPR, 3 )
    field( DRVH, 3 )
    field( LOPR, 0 )
    field( DRVL, 0 )
    field( SDIS, "$(SerialDisable)")
}

# TODO: Use calc record to compute EdtBinX_RBY from VBIN reply
#   GoldEye VBIN 0, EdtBinY_RBV 1
#   GoldEye VBIN 1, EdtBinY_RBV 2
#   GoldEye VBIN 2, EdtBinY_RBV 4
#   GoldEye VBIN 3, EdtBinY_RBV 8
record( longin, "$(P)$(R)GoldEyeBinY_RBV" )
{
    field( DESC, "Vertical Binning" )
    field( DTYP, "stream" )
    field( INP,	 "@avtGoldEye008.proto GetInt(VBIN) $(PORT).SER" )
    field( SDIS, "$(SerialDisable)")
}

# Vertical remapping is enabled by the EDT config file and should not be changed.
#record( bo, "$(P)$(R)GoldEyeSetVR" )
#{
#    field( DESC, "Set Vertical Remapping" )
#    field( DTYP, "stream"       )
#    field( OUT,	 "@avtGoldEye008.proto SetInt(VR) $(PORT).SER" )
#    field( FLNK, "$(P)$(R)GoldEyeVR" )
#    field( ZNAM, "No Remapping" )
#    field( ONAM, "Remapping"    )
#}

# Vertical remapping is enabled by the EDT config file and should not be changed.
record( bi, "$(P)$(R)GoldEyeVR" )
{
    field( DESC, "Vertical Remapping" )
    field( DTYP, "stream"       )
    field( INP,	 "@avtGoldEye008.proto GetInt(VR) $(PORT).SER" )
    field( ZNAM, "No Remapping" )
    field( ONAM, "Remapping"    )
    field( SDIS, "$(SerialDisable)")
}

# Recall configuration
# Config 0 is factory default
# Config 1..9 are available for user configurations
record( longout, "$(P)$(R)GoldEyeReadNVRamConfig" )
{
    field( DESC, "Set Power-up Configuration" )
    field( DTYP, "stream" )
    field( OUT,	 "@avtGoldEye008.proto SetInt(LC) $(PORT).SER" )
    field( FLNK, "$(P)$(R)GoldEyeNVRamConfig_RBV" )
    field( HOPR, 9 )
    field( DRVH, 9 )
    field( LOPR, 0 )
    field( DRVL, 0 )
# Disabled to avoid accidental use
	field( DISV, "0" )
    field( SDIS, "$(SerialDisable)")
}

# Read last selected configuration number
record( longin, "$(P)$(R)GoldEyeNVRamConfig_RBV" )
{
    field( DESC, "Power-up Configuration" )
    field( DTYP, "stream" )
    field( INP,	 "@avtGoldEye008.proto GetInt(LC) $(PORT).SER" )
    field( SDIS, "$(SerialDisable)")
}

record( mbbo, "$(P)$(R)GoldEyeOutputMirror" )
{
    field( DESC, "Set the Output Mirroring" )
    field( DTYP, "stream" )
    field( OUT,	 "@avtGoldEye008.proto SetInt(MI) $(PORT).SER" )
    field( FLNK, "$(P)$(R)GoldEyeOutputMirror_RBV" )
    field( ZRVL, 0 )
    field( ONVL, 1 )
    field( TWVL, 2 )
    field( THVL, 3 )
    field( ZRST, "No Mirrors"	)
    field( ONST, "Horizontal"	)
    field( TWST, "Vertical"		)
    field( THST, "Horz&Vert"	)
    field( SDIS, "$(SerialDisable)")
}

record( mbbi, "$(P)$(R)GoldEyeOutputMirror_RBV" )
{
    field( DESC, "Output Mirroring" )
    field( DTYP, "stream" )
    field( INP,	 "@avtGoldEye008.proto GetInt(MI) $(PORT).SER" )
    field( ZRVL, 0 )
    field( ONVL, 1 )
    field( TWVL, 2 )
    field( THVL, 3 )
    field( ZRST, "No Mirrors"	)
    field( ONST, "Horizontal"	)
    field( TWST, "Vertical"		)
    field( THST, "Horz&Vert"	)
	field( PINI, "YES" )
    field( SDIS, "$(SerialDisable)")
}

record( stringin, "$(P)$(R)GoldEyeModelID_RBV" )
{
    field( DESC, "Model ID" )
    field( DTYP, "stream" )
    field( INP,	 "@avtGoldEye008.proto GetQStr(MID) $(PORT).SER" )
    field( SDIS, "$(SerialDisable)")
}

# GoldEye processing w/ Vertical Remapping enabled is
# 2us + 7.5us + 4.7ms
record( ao, "$(P)$(R)CamProcDelay" )
{
    field( DOL,  "4.7095e-3" )
    field( EGU,  "Sec" )
    field( PREC, "3" ) 
    field( PINI, "YES" )
    info( autosaveFields, "VAL" )
}

# Effective transmit rate is 80Mhz PixelClock * 2 HTaps
record( ao, "$(P)$(R)XmitRate" )
{
    field( DOL,  "160.0e6" )
    field( EGU,  "Bytes/Sec" )
    field( PREC, "3" )
    field( PINI, "YES" )
    info( autosaveFields, "VAL" )
}   

# GoldEye XmitDelay doesn't vary w/ ROI, just BinY
# Did linear regression fit on t_frame_min values from GoldEye manual
# Slope  = 6.8107e-6
# Offset = 1.1513e-3
record( calc, "$(P)$(R)XmitDelay" )
{
    field( INPA, "6.8107e-6" )
    field( INPB, "1.1513e-3" )
    field( INPC, "$(P)$(R)CamProcDelay CPP MS" )
    field( INPD, "$(P)$(R)BinY  CPP MS" )
    field( INPE, "$(P)$(R)SizeY CPP MS" )
    field( CALC, "A*E/D+B+C" )
    field( EGU,  "Sec" )
}


# Possible TODO: Add support for
#	WB,WB?	Set and read white balance, Color cameras only
#	OFS,OFS? Set and read black offset, Color cameras only
#	USIx;y and USI?x	Set and read user defined integers
#	USSx;y and USS?x	Set and read user defined strings
#	RQ		Initiate soft request readout
#	ROIx;y;w;h		Set ROI x offset, y offset, width, and height
