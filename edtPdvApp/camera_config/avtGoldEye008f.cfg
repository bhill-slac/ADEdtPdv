#
# CAMERA_MODEL "Adimec 1000m/CL Mono CamLink 12-bit camera continuous"
#

camera_class:           "Adimec"
camera_model:           "1000m/CL"
camera_info:            "12-bit, camera continuous"

width:                  1024
height:                 1024
depth:                  12
extdepth:               12

# baud rate for adimec is 57.6 Kbaud
#
serial_baud: 57600

# Framesync method
# Don't use framesync w/ GoldEye as it can cause hsync issues
method_framesync: FRAMESYNC_OFF

# Initialize camera:
# This camera uses GenCP protocol, a binary protocol
# By setting serial_tag to GenCP, we enable wrapper functions which translate
# simple serial commands to the proper GenCP packets including checksums and packet IDs.
#
# Examples:
# Write 1 to 32 bit unsigned int at register 0x130F4
# U32 0x130F4=1
#
# This gives us simple access to low level camera registers.
# Accessing the camera via the features defined in it's feature XML file
# requires use of the genicam software api.
#
# Some key register addresses, lengths, and names:
# Address		Length	Name
# 0x00000000	U32		GenCP Version
# 0x00000004	C64		64 character Manufacturer Name
# 0x00000044	C64		64 character Model Name
# 0x000001D0	U64		Manifest table address (XML feature files)
# 0x000001E0	U64		Device Configuration: Bit 0=HeartbeatEnable, Bit1=MultiEventEnable
# 0x000001E8	U32		Heartbeat Timeout in ms
# 0x00000204	U32		AccessPrivilege, 0=Avail (no image streaming), 1=Exclusive
# NOTE: Must set AccessPrivilege in BRM to 1 for write access and read or write at
# least once every 3 sec so heartbeat won't timeout and stop image streaming!
#
# Address		Length	Name
# 0x000130F4	U32		RegAcquisitionStart, 0=Stop, 1=Start
# 0x00013108	U32		RegAcquisitionMode, 1=Continuous, 2=Single, 3=Multiple
# 0x00013108	U32		RegAcquisitionFrameCount, used for Multiple AcquisitionMode
#
# Manifest Table
# Offset		Length	Name
# 0             8       Number of entries
# 8             64		Entry 0
# 8+1*64        64		Entry 1
# ...
# 8+N*64        64		Entry N
#
# Manifest Entry, one per GeniCam XML file
# Offset		Length	Name
# 0             4       FileVersion
# 4             4       Schema (version and compressed flag)
# 8             8       Start register of file
# 16            8		File Size
# 24            20		SHA1-Hash
#
serial_tag: "GenCP"
#serial_init: ""

# interlace method
# only for interleaved and some dual channel cameras
# determines how image is deinterleaved for display -- BYTE_INTLV is only
# one of many available methods -- see *_INTLV in pdv_dependent.h and
# camera configuration guide for more
#method_interlace:	WORD_INTLV_TOPBOTTOM

# adimec serial exposure method is implemented internally to
# libpdv. min and max are just used by apps who want to use
# them, e.g. pdvshow to set limits for sliders
#
shutter_speed_min: 1
shutter_speed_max: 4000
method_camera_shutter_timing: ADIMEC_SERIAL

# serial gain method for adimec embedded in libpdv
#
gain_min:               1
gain_max:               8

# serial offset (black level) method for adimec embedded in
# libpdv. note that offset has 2 channels, but pdvshow only has
# one slider so it controls both the same. user apps can control
# channel offset separately however, via pdv_set_blacklevel_adimec
# or pdv_serial_command()
#
offset_min:             0
offset_max:             4095

htaps: 2

# camera link data path register bits (hex):
# 0-3: number of bits per pixel - 1
# 4-7: number of channels - 1
#
CL_DATA_PATH_NORM:      1b

CL_CFG_NORM:            02

# region of interest start and area
# vskip/hskip is how many pixels to skip before ROI, vert and horiz
# vactv/hactv is how many pixels to DMA to memory after skip
#
vskip:                  0
hskip:                  0
hactv:                  1024
vactv:                  1024

